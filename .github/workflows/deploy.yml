name: Deploy to Cloud Run
on:
  push:
    branches: [main]

permissions:
  contents: read
  id-token: write

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT }}
  REGION: ${{ secrets.GCP_REGION }}                    # 例如 asia-east1
  SERVICE: ${{ secrets.CLOUD_RUN_SERVICE }}            # 例如 stadiumweather
  REPO: app                                            # 你的 AR repo 名
  IMAGE: ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/app/app:${{ github.sha }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - uses: actions/checkout@v4

      - name: Auth to Google Cloud (WIF)
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WIF_PROVIDER }}
          service_account: ${{ secrets.GCP_SA_EMAIL }}
          token_format: 'access_token'
          create_credentials_file: true
          export_default_credentials: true

      - name: Who am I
        run: |
          gcloud auth list
          gcloud config list

      - name: Sanity check Artifact Registry repo
        run: |
          gcloud artifacts repositories describe "$REPO" \
            --location "$REGION" --project "$PROJECT_ID"

      - name: Docker login to Artifact Registry
        run: |
          set -eux
          HOST="$REGION-docker.pkg.dev"
          ACCESS_TOKEN="$(gcloud auth print-access-token)"
          echo "$ACCESS_TOKEN" | docker login -u oauth2accesstoken --password-stdin "https://$HOST"
          gcloud auth configure-docker "$HOST" --quiet

      - name: Build & Push image
        run: |
          set -euxo pipefail
          echo "IMAGE=$IMAGE"
          docker build -t "$IMAGE" .
          docker push "$IMAGE"

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          image: ${{ env.IMAGE }}
          project_id: ${{ env.PROJECT_ID }}
          flags: >
            --allow-unauthenticated
            --set-env-vars LINE_CHANNEL_SECRET=${{ secrets.LINE_CHANNEL_SECRET }},LINE_CHANNEL_ACCESS_TOKEN=${{ secrets.LINE_CHANNEL_ACCESS_TOKEN }}

      - name: Show URL
        run: echo "Deployed URL: ${{ steps.deploy.outputs.url }}"
